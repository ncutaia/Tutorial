<cofluent:Application xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cofluent="http://cofluent.intel.com/cofluent/1.0.0" xmi:version="2.0" globalTypeDeclarations="typedef cf_dt::cf_time DefStartTime;&#13;&#10;typedef cf_dt::cf_data_size DefDataSize;&#13;&#10;typedef float DefValue; &#13;&#10; &#13;&#10;typedef struct{&#13;&#10;&#9;DefStartTime StartTime;&#13;&#10;&#9;DefDataSize DataSize;&#13;&#10;&#9;DefValue Value;&#13;&#10;} DefData;" cyclePeriod="10 ns" affinity="0" priority="1" schedulingPolicy="FIFO" InterfaceBlockingBehavior="RELEASE_CORE" timeSlicePeriod="10 ms" staticCodeSize="0 kB" staticDataSize="0 kB" staticPowerConsumption="0 uW" dynamicPowerConsumption="0 uW" cost="0 USD" dynamicResourceLoad="100" allowContainedMembersToAccess="false" boostDestructorPerformance="false" preElaboration="" name="ApplicationModel" enableISIM="false" simicsClassName="" simicsObjectName="" useModuleName="false" useCustomizedName="false" xmi:id="_-N6BcRhUEeaRJZtBX_vAyA">
  <designParameters min="0.1" max="1.0" step="0.1" internalUnit="HZ" type="DECIMAL" default="0.5" visibility="PUBLIC" accessRight="READ_ONLY" value="0.5" name="Frequency" documentation="Frequency of signal" xsi:type="cofluent:RangeParameter" xmi:id="_Ni9nEB0PEeaquPXHm3CdXA"/>
  <designParameters min="0" max="1000" step="100" type="INTEGER" default="0" visibility="PUBLIC" accessRight="READ_ONLY" name="NoiseLevel" documentation="Noise added to signal" xsi:type="cofluent:RangeParameter" xmi:id="_X_-YgB0PEeaquPXHm3CdXA"/>
  <designParameters min="0" max="20" step="5" type="INTEGER" default="0" visibility="PUBLIC" accessRight="READ_ONLY" name="ErrorRate" documentation="Error rate (%)" xsi:type="cofluent:RangeParameter" xmi:id="_eK7e4B0PEeaquPXHm3CdXA"/>
  <designParameters min="200" max="500" step="50" type="INTEGER" default="200" visibility="PUBLIC" accessRight="READ_ONLY" name="DataSize" documentation="Size of data" xsi:type="cofluent:RangeParameter" xmi:id="_jhrhIB0PEeaquPXHm3CdXA"/>
  <refinement name="ApplicationModelSt" xsi:type="cofluent:Structure" xmi:id="_-N6ogBhUEeaRJZtBX_vAyA">
    <relations capacity="1" concurrency="1" concurrencyManagement="FULL" sendTime="1 ns" receiveTime="1 ns" sendThreshold="1" receiveThreshold="1" protocol="COFLUENT" address="" mask="" response="" messageQueueType="STANDARD" chiselCosimInterfaceProtocol="COFLUENT_DPI_INTERFACE" cosimChiselAxiDataWidth="64" cosimChiselAxiAddressWidth="32" cosimChiselAxiCombine="" cosimChiselDataPortBits="" name="Msg" xmi:id="_bawLiRkYEealL-5xWZDvNw" xsi:type="cofluent:MessageQueue" ports="_bau9YxkYEealL-5xWZDvNw _baqE4xkYEealL-5xWZDvNw">
      <relationType xmi:id="_gn177o613NWLbFT0XVZ4UL" xsi:type="cofluent:RelationDataType">
        <dataType href="reuse://_lQ5jVWupcYbcTnrDIHI4Ta/Tutorial/Tutorial/models/ApplicationModelDataTypes.cf_dt#_mFqcRSGuEeaaOsqBPt_qWw"/>
      </relationType>
    </relations>
    <relations capacity="1" concurrency="1" concurrencyManagement="FULL" sendTime="1 ns" receiveTime="1 ns" sendThreshold="1" receiveThreshold="1" protocol="COFLUENT" address="" mask="" response="" messageQueueType="STANDARD" chiselCosimInterfaceProtocol="COFLUENT_DPI_INTERFACE" cosimChiselAxiDataWidth="64" cosimChiselAxiAddressWidth="32" cosimChiselAxiCombine="" cosimChiselDataPortBits="" name="Ack" xmi:id="_bawykBkYEealL-5xWZDvNw" xsi:type="cofluent:MessageQueue" ports="_baqE5BkYEealL-5xWZDvNw _bau9YhkYEealL-5xWZDvNw">
      <relationType xmi:id="_dJ9NiQtiAinAFMbrYRIL2P" xsi:type="cofluent:RelationDataType">
        <dataType href="reuse://_oUzAaCrDGeKgV_QF9Hb9Os/Tutorial/Tutorial/models/ApplicationModelDataTypes.cf_dt#_mFqcQCGuEeaaOsqBPt_qWw"/>
      </relationType>
    </relations>
    <models coSimulationType="NONE_COSIM" blackbox="false" cyclePeriod=" ns" scope="SYSTEM" doNotStart="false" affinity="0" priority="1" schedulingPolicy="FIFO" InterfaceBlockingBehavior="RELEASE_CORE" timeSlicePeriod="10 ms" staticCodeSize="0 kB" staticDataSize="0 kB" staticPowerConsumption="0 uW" dynamicPowerConsumption="0 uW" cost="0 USD" dynamicResourceLoad="100" allowContainedMembersToAccess="false" doNotInstance="false" boostDestructorPerformance="false" constructor="" includes="" declarations="" includeInheritedHeader="" inheritanceClass="" callToInheritedConstructors="" name="Producer" enableISIM="false" simicsClassName="" simicsObjectName="" useModuleName="false" useCustomizedName="false" xmi:id="_baqE4BkYEealL-5xWZDvNw" xsi:type="cofluent:Function">
      <ports type="MESSAGE_QUEUE" direction="OUT" size="" synchronizeName="true" vector="false" requestPipelineDepth="1" name="Msg" xmi:id="_baqE4xkYEealL-5xWZDvNw" relations="_bawLiRkYEealL-5xWZDvNw" ports="_baqsIhkYEealL-5xWZDvNw">
        <constructorArguments/>
        <templateArguments/>
      </ports>
      <ports type="MESSAGE_QUEUE" direction="IN" size="" synchronizeName="true" vector="false" requestPipelineDepth="1" name="Ack" xmi:id="_baqE5BkYEealL-5xWZDvNw" relations="_bawykBkYEealL-5xWZDvNw" ports="_baqsIxkYEealL-5xWZDvNw">
        <constructorArguments/>
        <templateArguments/>
      </ports>
      <refinement name="ProducerSt" xsi:type="cofluent:Structure" xmi:id="_baqE5RkYEealL-5xWZDvNw">
        <relations policy="BOOLEAN" setTime="1 ns" getTime="1 ns" name="Req" xmi:id="_baqsbhkYEealL-5xWZDvNw" xsi:type="cofluent:Event" ports="_baqE6BkYEealL-5xWZDvNw _baqsIRkYEealL-5xWZDvNw"/>
        <relations semaphore="false" concurrency="1" counter="1" writeTime="1 ns" readTime="1 ns" name="DataVar" xmi:id="_baqscxkYEealL-5xWZDvNw" xsi:type="cofluent:SharedVariable" ports="_baqr8BkYEealL-5xWZDvNw _baqsJBkYEealL-5xWZDvNw">
          <relationType xmi:id="_aypsgJiPq5DaCfXqRi3qKu" xsi:type="cofluent:RelationDataType">
            <dataType href="reuse://_fKQsPygjjKa0TQprtQ1OFA/Tutorial/Tutorial/models/ApplicationModelDataTypes.cf_dt#_mFqcQiGuEeaaOsqBPt_qWw"/>
          </relationType>
        </relations>
        <relations semaphore="false" concurrency="1" counter="1" writeTime="1 ns" readTime="1 ns" name="TestProd" xmi:id="_baqsehkYEealL-5xWZDvNw" xsi:type="cofluent:SharedVariable" ports="_baqr8RkYEealL-5xWZDvNw">
          <relationType xmi:id="_Hwxrx04FlU-knLXBjKSn0d" xsi:type="cofluent:RelationDataType">
            <dataType href="reuse://_nMWoHL_pD4EnFgWo6DeX_p/Tutorial/Tutorial/models/ApplicationModelDataTypes.cf_dt#_mFrDUCGuEeaaOsqBPt_qWw"/>
          </relationType>
        </relations>
        <models coSimulationType="NONE_COSIM" blackbox="false" cyclePeriod=" ns" scope="SYSTEM" doNotStart="false" affinity="0" priority="1" schedulingPolicy="FIFO" InterfaceBlockingBehavior="RELEASE_CORE" timeSlicePeriod="10 ms" staticCodeSize="0 kB" staticDataSize="0 kB" staticPowerConsumption="0 uW" dynamicPowerConsumption="0 uW" cost="0 USD" dynamicResourceLoad="100" allowContainedMembersToAccess="false" doNotInstance="false" boostDestructorPerformance="false" constructor="" includes="" destructor="" declarations="" definitions="" preElaboration="" initializations="" includeInheritedHeader="" inheritanceClass="" callToInheritedConstructors="" name="Generator" enableISIM="false" simicsClassName="" simicsObjectName="" useModuleName="false" useCustomizedName="false" xmi:id="_baqE5hkYEealL-5xWZDvNw" xsi:type="cofluent:Function">
          <ports type="EVENT" direction="OUT" size="" synchronizeName="true" vector="false" requestPipelineDepth="1" name="Req" xmi:id="_baqE6BkYEealL-5xWZDvNw" outputActions="_baqsBhkYEealL-5xWZDvNw" relations="_baqsbhkYEealL-5xWZDvNw">
            <constructorArguments/>
            <templateArguments/>
          </ports>
          <ports type="SHARED_VARIABLE" direction="OUT" size="" synchronizeName="true" vector="false" requestPipelineDepth="1" name="DataVar" xmi:id="_baqr8BkYEealL-5xWZDvNw" relations="_baqscxkYEealL-5xWZDvNw">
            <constructorArguments/>
            <templateArguments/>
          </ports>
          <ports type="SHARED_VARIABLE" direction="OUT" size="" synchronizeName="true" vector="false" requestPipelineDepth="1" name="TestProd" xmi:id="_baqr8RkYEealL-5xWZDvNw" relations="_baqsehkYEealL-5xWZDvNw">
            <constructorArguments/>
            <templateArguments/>
          </ports>
          <refinement name="GeneratorBh" xsi:type="cofluent:Behavior" xmi:id="_baqr8hkYEealL-5xWZDvNw" firstStatement="_baqr8xkYEealL-5xWZDvNw">
            <statements algorithm="&#9;DataVar = 0.0;&#10;&#9;TestProd = DataVar;" executionTime="10 ns" nonBlocking="false" systematicRead="false" systematicWrite="true" abortPort="" dynamicDataSize="0 kB" dynamicPowerConsumption=" uW" type="ACTIVE" dynamicResourceLoad="" name="OpInit" xmi:id="_baqr8xkYEealL-5xWZDvNw" xsi:type="cofluent:Operation" next="_baqr_BkYEealL-5xWZDvNw" isFirstOf="_baqr8hkYEealL-5xWZDvNw"/>
            <statements name="Loop" xmi:id="_baqr_BkYEealL-5xWZDvNw" xsi:type="cofluent:LoopStatement" previous="_baqr8xkYEealL-5xWZDvNw" firstStatement="_baqr_RkYEealL-5xWZDvNw" lastStatement="_baqsBhkYEealL-5xWZDvNw"/>
            <statements algorithm="&#9;// Produces a discrete sinusoidal signal&#10;&#9;double f = Frequency.get_value().to_scalar(CF_HZ);&#10;&#9;double t = cf_time_stamp().to_scalar();&#10;&#9;DataVar = (DefValue)(1000.0 * sin( (2 * 3.14 * f * t)/1000.0 ) );&#10;&#9;TestProd = DataVar;" executionTime="100 ns" nonBlocking="false" systematicRead="false" systematicWrite="true" abortPort="" dynamicDataSize="0 kB" dynamicPowerConsumption=" uW" type="ACTIVE" dynamicResourceLoad="" name="OpGen" xmi:id="_baqr_RkYEealL-5xWZDvNw" xsi:type="cofluent:Operation" isFirstOf="_baqr_BkYEealL-5xWZDvNw" next="_baqsBhkYEealL-5xWZDvNw"/>
            <statements duration=" ns" condition="" priority="" vectorSize="" blocking="true" call="" name="OutAction" xmi:id="_baqsBhkYEealL-5xWZDvNw" xsi:type="cofluent:OutputAction" isLastOf="_baqr_BkYEealL-5xWZDvNw" previous="_baqr_RkYEealL-5xWZDvNw" port="_baqE6BkYEealL-5xWZDvNw"/>
          </refinement>
        </models>
        <models coSimulationType="NONE_COSIM" blackbox="false" cyclePeriod=" ns" scope="SYSTEM" doNotStart="false" affinity="1" priority="1" schedulingPolicy="FIFO" InterfaceBlockingBehavior="RELEASE_CORE" timeSlicePeriod="10 ms" staticCodeSize="0 kB" staticDataSize="0 kB" staticPowerConsumption="0 uW" dynamicPowerConsumption="0 uW" cost="0 USD" dynamicResourceLoad="100" allowContainedMembersToAccess="false" doNotInstance="false" boostDestructorPerformance="false" constructor="" includes="" destructor="" declarations="" definitions="" preElaboration="" initializations="" includeInheritedHeader="" inheritanceClass="" callToInheritedConstructors="" name="Sender" enableISIM="false" simicsClassName="" simicsObjectName="" useModuleName="false" useCustomizedName="false" xmi:id="_baqsIBkYEealL-5xWZDvNw" xsi:type="cofluent:Function">
          <ports type="EVENT" direction="IN" size="" synchronizeName="true" vector="false" requestPipelineDepth="1" name="Req" xmi:id="_baqsIRkYEealL-5xWZDvNw" inputActions="_baqsMBkYEealL-5xWZDvNw" relations="_baqsbhkYEealL-5xWZDvNw">
            <constructorArguments/>
            <templateArguments/>
          </ports>
          <ports type="MESSAGE_QUEUE" direction="OUT" size="" synchronizeName="true" vector="false" requestPipelineDepth="1" name="Msg" xmi:id="_baqsIhkYEealL-5xWZDvNw" port="_baqE4xkYEealL-5xWZDvNw" outputActions="_baqsVBkYEealL-5xWZDvNw">
            <constructorArguments/>
            <templateArguments/>
          </ports>
          <ports type="MESSAGE_QUEUE" direction="IN" size="" synchronizeName="true" vector="false" requestPipelineDepth="1" name="Ack" xmi:id="_baqsIxkYEealL-5xWZDvNw" port="_baqE5BkYEealL-5xWZDvNw" inputActions="_baqsSBkYEealL-5xWZDvNw">
            <constructorArguments/>
            <templateArguments/>
          </ports>
          <ports type="SHARED_VARIABLE" direction="IN" size="" synchronizeName="true" vector="false" requestPipelineDepth="1" name="DataVar" xmi:id="_baqsJBkYEealL-5xWZDvNw" inputActions="_baqsPBkYEealL-5xWZDvNw" relations="_baqscxkYEealL-5xWZDvNw">
            <constructorArguments/>
            <templateArguments/>
          </ports>
          <refinement name="SenderBh" xsi:type="cofluent:Behavior" xmi:id="_baqsJRkYEealL-5xWZDvNw" firstStatement="_baqsLxkYEealL-5xWZDvNw">
            <statements algorithm="&#9;Msg.Value = DataVar;" executionTime="10 ns" nonBlocking="false" systematicRead="false" systematicWrite="false" abortPort="" dynamicDataSize="0 kB" dynamicPowerConsumption=" uW" type="ACTIVE" dynamicResourceLoad="" name="OpEncode" xmi:id="_baqsJhkYEealL-5xWZDvNw" xsi:type="cofluent:Operation" next="_baqsVBkYEealL-5xWZDvNw" previous="_baqsPBkYEealL-5xWZDvNw"/>
            <statements name="Loop" xmi:id="_baqsLxkYEealL-5xWZDvNw" xsi:type="cofluent:LoopStatement" firstStatement="_baqsMBkYEealL-5xWZDvNw" isFirstOf="_baqsJRkYEealL-5xWZDvNw" lastStatement="_baqsSBkYEealL-5xWZDvNw"/>
            <statements timeout=" ns" priority="" broadcast="false" duration=" ns" vectorSize="" blocking="true" condition="" doNotRead="false" name="InAction" xmi:id="_baqsMBkYEealL-5xWZDvNw" xsi:type="cofluent:InputAction" isFirstOf="_baqsLxkYEealL-5xWZDvNw" next="_baqsPBkYEealL-5xWZDvNw" port="_baqsIRkYEealL-5xWZDvNw"/>
            <statements timeout=" ns" priority="" broadcast="false" duration=" ns" vectorSize="" blocking="true" condition="" doNotRead="false" name="InAction2" xmi:id="_baqsPBkYEealL-5xWZDvNw" xsi:type="cofluent:InputAction" next="_baqsJhkYEealL-5xWZDvNw" previous="_baqsMBkYEealL-5xWZDvNw" port="_baqsJBkYEealL-5xWZDvNw"/>
            <statements timeout=" ns" priority="" broadcast="false" duration=" ns" vectorSize="" blocking="true" condition="" doNotRead="false" name="InAction3" xmi:id="_baqsSBkYEealL-5xWZDvNw" xsi:type="cofluent:InputAction" isLastOf="_baqsLxkYEealL-5xWZDvNw" previous="_baqsVBkYEealL-5xWZDvNw" port="_baqsIxkYEealL-5xWZDvNw"/>
            <statements duration=" ns" condition="" priority="" vectorSize="" blocking="true" call="" name="OutAction" xmi:id="_baqsVBkYEealL-5xWZDvNw" xsi:type="cofluent:OutputAction" previous="_baqsJhkYEealL-5xWZDvNw" next="_baqsSBkYEealL-5xWZDvNw" port="_baqsIhkYEealL-5xWZDvNw"/>
          </refinement>
        </models>
      </refinement>
    </models>
    <models coSimulationType="NONE_COSIM" blackbox="false" cyclePeriod=" ns" scope="SYSTEM" doNotStart="false" affinity="0" priority="1" schedulingPolicy="FIFO" InterfaceBlockingBehavior="RELEASE_CORE" timeSlicePeriod="10 ms" staticCodeSize="0 kB" staticDataSize="0 kB" staticPowerConsumption="0 uW" dynamicPowerConsumption="0 uW" cost="0 USD" dynamicResourceLoad="100" allowContainedMembersToAccess="false" doNotInstance="false" boostDestructorPerformance="false" includes="" destructor="" declarations="DefValue noise;&#13;&#10;DefValue TestCons;" definitions="" preElaboration="" initializations="" includeInheritedHeader="" inheritanceClass="" callToInheritedConstructors="" name="Receiver" enableISIM="false" simicsClassName="" simicsObjectName="" useModuleName="false" useCustomizedName="false" xmi:id="_bau9YBkYEealL-5xWZDvNw" xsi:type="cofluent:Function">
      <ports type="MESSAGE_QUEUE" direction="OUT" size="" synchronizeName="true" vector="false" requestPipelineDepth="1" name="Ack" xmi:id="_bau9YhkYEealL-5xWZDvNw" outputActions="_bau9fBkYEealL-5xWZDvNw" relations="_bawykBkYEealL-5xWZDvNw">
        <constructorArguments/>
        <templateArguments/>
      </ports>
      <ports type="MESSAGE_QUEUE" direction="IN" size="" synchronizeName="true" vector="false" requestPipelineDepth="1" name="Msg" xmi:id="_bau9YxkYEealL-5xWZDvNw" inputActions="_bau9cBkYEealL-5xWZDvNw" relations="_bawLiRkYEealL-5xWZDvNw">
        <constructorArguments/>
        <templateArguments/>
      </ports>
      <refinement name="ReceiverBh" xsi:type="cofluent:Behavior" xmi:id="_bau9ZBkYEealL-5xWZDvNw" firstStatement="_bau9ZRkYEealL-5xWZDvNw">
        <statements algorithm="&#9;noise = 0.0;&#10;&#9;TestCons = 0.0;&#10;&#9;cf_trace_gui_f_t(&quot;TestCons&quot;, TestCons);" executionTime="10 ns" nonBlocking="false" systematicRead="false" systematicWrite="false" abortPort="" dynamicDataSize="0 kB" dynamicPowerConsumption=" uW" type="ACTIVE" dynamicResourceLoad="" name="OpInit" xmi:id="_bau9ZRkYEealL-5xWZDvNw" xsi:type="cofluent:Operation" next="_bau9bhkYEealL-5xWZDvNw" isFirstOf="_bau9ZBkYEealL-5xWZDvNw"/>
        <statements condition="" name="Loop" xmi:id="_bau9bhkYEealL-5xWZDvNw" xsi:type="cofluent:LoopStatement" previous="_bau9ZRkYEealL-5xWZDvNw" firstStatement="_bau9cBkYEealL-5xWZDvNw" lastStatement="_bau9fBkYEealL-5xWZDvNw"/>
        <statements timeout=" ns" priority="" broadcast="false" duration=" ns" vectorSize="" blocking="true" condition="" doNotRead="false" name="InAction" xmi:id="_bau9cBkYEealL-5xWZDvNw" xsi:type="cofluent:InputAction" isFirstOf="_bau9bhkYEealL-5xWZDvNw" next="_bau9hxkYEealL-5xWZDvNw" port="_bau9YxkYEealL-5xWZDvNw"/>
        <statements duration=" ns" condition="" priority="" vectorSize="" blocking="true" call="" name="OutAction" xmi:id="_bau9fBkYEealL-5xWZDvNw" xsi:type="cofluent:OutputAction" isLastOf="_bau9bhkYEealL-5xWZDvNw" previous="_bau9hxkYEealL-5xWZDvNw" port="_bau9YhkYEealL-5xWZDvNw"/>
        <statements algorithm="&#9;// Adds noise to signal&#10;&#9;double t = cf_time_stamp().to_scalar();&#10;&#9;noise = (DefValue)(NoiseLevel * sin(0.25 * 3.14 * NoiseLevel*t));&#10;&#10;&#9;TestCons = Msg.Value + noise;&#10;&#9;// TestCons value is round down using floor C++ API&#10;&#9;cf_trace_gui_f_t(&quot;TestCons&quot;, floor(TestCons));" executionTime="10 ns" nonBlocking="false" systematicRead="false" systematicWrite="false" abortPort="" dynamicDataSize="0 kB" dynamicPowerConsumption=" uW" type="ACTIVE" dynamicResourceLoad="" name="OpDecode" xmi:id="_bau9hxkYEealL-5xWZDvNw" xsi:type="cofluent:Operation" previous="_bau9cBkYEealL-5xWZDvNw" next="_bau9fBkYEealL-5xWZDvNw"/>
      </refinement>
    </models>
  </refinement>
  <annotations xmi:id="_-RtjYBhUEeaRJZtBX_vAyA" source="cdt.configurations">
    <details xmi:id="_U4-uEHH5EeeJVqe6rKhyIg" key="cofluent.managedbuild.config.gnu.mingw.exe.release.457760404" value="cdt.configuration.active"/>
  </annotations>
</cofluent:Application>